Лог	= Справочники.А_ЛогПроизводительности.СоздатьЭлемент();
Лог.Наименование	= "Отчет ДлительностьДиагностик_БезФактических";
Лог.Дата	= ТекущаяДата();
Действие	= Лог.Действия.Добавить();
Действие.Наименование	= "Клиент: Формирование запроса к 1С";
Действие.Начало	= ТекущаяУниверсальнаяДатаВМиллисекундах();

//====
// Запрос: Загрузка данных
//====
ТекстЗапроса	= "ВЫБРАТЬ РАЗЛИЧНЫЕ
|	А_Заявка.Ссылка,
|	А_Заявка.Мастер,
|	А_Заявка.Дата,
|	А_Заявка.Отказ,
|	А_Заявка.Повторная,
|	А_Заявка.Направление,
|	А_Заявка.ЗаявленнаяНеисправность1,
|	А_Заявка.ЗаявленнаяНеисправность2
|ПОМЕСТИТЬ Заявки
|ИЗ
|	Документ.А_Заявка КАК А_Заявка
|ГДЕ
|	(ДОБАВИТЬКДАТЕ(А_Заявка.ДатаЗакрытия, НЕДЕЛЯ, 1) >= &НачалоПериода
|			ИЛИ А_Заявка.ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1))
|	И А_Заявка.Дата < &КонецПериода
|	И НЕ А_Заявка.Мастер = ЗНАЧЕНИЕ(Справочник.А_Мастера.ПустаяСсылка)
|	И (&Направление = ЗНАЧЕНИЕ(Справочник.Айсберг_Направления.ПустаяСсылка)
|			ИЛИ А_Заявка.Направление = &Направление)
|	И (&Мастер = ЗНАЧЕНИЕ(Справочник.А_Мастера.ПустаяСсылка)
|			ИЛИ А_Заявка.Мастер = &Мастер)
|	И (&Заявка = ЗНАЧЕНИЕ(Документ.А_Заявка.ПустаяСсылка)
|			ИЛИ А_Заявка.Ссылка = &Заявка)
|
|СГРУППИРОВАТЬ ПО
|	А_Заявка.Ссылка,
|	А_Заявка.Мастер,
|	А_Заявка.Дата,
|	А_Заявка.Отказ,
|	А_Заявка.Повторная,
|	А_Заявка.Направление,
|	А_Заявка.ЗаявленнаяНеисправность1,
|	А_Заявка.ЗаявленнаяНеисправность2
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ Различные
|	ЕСТЬNULL(СборкаЗаявок.Ссылка.ТоварнаяГруппа.Код, 0) КАК field_1,
|	ЕСТЬNULL(СборкаЗаявок.Направление.Код, 0) КАК field_2,
|	ЕСТЬNULL(СборкаЗаявок.ЗаявленнаяНеисправность1.Код, 0) КАК field_3,
|	ЕСТЬNULL(СборкаЗаявок.ЗаявленнаяНеисправность2.Код, 0) КАК field_4,
|	ЕСТЬNULL(А_ОтчетМастераРаботы.Работа.Код, 0) КАК field_5,
|	СборкаЗаявок.Мастер.Код КАК field_6,
|	0 КАК field_7,
|	0 КАК field_8,
|	Значение(Документ.А_Заявка.ПустаяСсылка) КАК field_11,
|	ЕСТЬNULL(СборкаЗаявок.Ссылка.ТоварнаяГруппа, ЗНАЧЕНИЕ(Справочник.А_ТоварныеГруппы.ПустаяСсылка)) КАК field_12,
|	ЕСТЬNULL(СборкаЗаявок.Направление, ЗНАЧЕНИЕ(Справочник.Айсберг_Направления.ПустаяСсылка)) КАК field_13,
|	ЕСТЬNULL(СборкаЗаявок.ЗаявленнаяНеисправность1, ЗНАЧЕНИЕ(Справочник.А_Неисправности.ПустаяСсылка)) КАК field_14,
|	ЕСТЬNULL(СборкаЗаявок.ЗаявленнаяНеисправность2, ЗНАЧЕНИЕ(Справочник.А_Неисправности.ПустаяСсылка)) КАК field_15,
|	ЕСТЬNULL(А_ОтчетМастераРаботы.Работа, ЗНАЧЕНИЕ(Справочник.А_Работы.ПустаяСсылка)) КАК field_16,
|	СборкаЗаявок.Мастер КАК field_17
|ИЗ
|	Заявки КАК СборкаЗаявок
|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.А_ОтчетМастера.Работы КАК А_ОтчетМастераРаботы
|		ПО (А_ОтчетМастераРаботы.Ссылка.Дата >= &НачалоПериода)
|			И (А_ОтчетМастераРаботы.Ссылка.Дата < &КонецПериода)
|			И (А_ОтчетМастераРаботы.Ссылка.Заявка = СборкаЗаявок.Ссылка)
|			И (А_ОтчетМастераРаботы.Ссылка.Проведен)
|			И (А_ОтчетМастераРаботы.Ссылка.ОтчетМастера)
|			И (А_ОтчетМастераРаботы.Работа.СчитатьДисконтнойКартой = ЛОЖЬ)
|			И (А_ОтчетМастераРаботы.Ссылка.ДокументКорректировки = ЗНАЧЕНИЕ(документ.А_ОтчетМастера.ПустаяСсылка))
|
|СГРУППИРОВАТЬ ПО
|	СборкаЗаявок.Ссылка.Номер,
|	СборкаЗаявок.Ссылка,
|	СборкаЗаявок.Направление.Код,
|	СборкаЗаявок.Направление,
|	СборкаЗаявок.ЗаявленнаяНеисправность1.Код,
|	СборкаЗаявок.ЗаявленнаяНеисправность1,
|	СборкаЗаявок.ЗаявленнаяНеисправность2.Код,
|	СборкаЗаявок.ЗаявленнаяНеисправность2,
|	А_ОтчетМастераРаботы.Работа.Код,
|	А_ОтчетМастераРаботы.Работа,
|	ЕСТЬNULL(СборкаЗаявок.Ссылка.ТоварнаяГруппа.Код, 0),
|	ЕСТЬNULL(СборкаЗаявок.Ссылка.ТоварнаяГруппа, ЗНАЧЕНИЕ(Справочник.А_ТоварныеГруппы.ПустаяСсылка)),
|	СборкаЗаявок.Мастер,
|	СборкаЗаявок.Мастер.Код";

Элемент	= Справочники.A_SqlData.СоздатьЭлемент();
Элемент.Наименование			= ""+ТекущаяДата()+" ДлительностьДиагностик_БезФактических";
Элемент.ИдентификаторЗапроса	= Новый УникальныйИдентификатор;
Элемент.ТекстЗапроса			= ТекстЗапроса;

Параметр	= Элемент.ПараметрыЗапроса.Добавить();
Параметр.Наименование	= "НачалоПериода";
Параметр.Значение		= Дата(ЭтотОбъект.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("НачалоПериода").Значение);

Параметр	= Элемент.ПараметрыЗапроса.Добавить();
Параметр.Наименование	= "КонецПериода";
Параметр.Значение		= Дата(ЭтотОбъект.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("КонецПериода").Значение);
Параметр	= Элемент.ПараметрыЗапроса.Добавить();
Параметр.Наименование	= "Направление";
Параметр.Значение		= ЭтотОбъект.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("Направление").Значение;

Параметр	= Элемент.ПараметрыЗапроса.Добавить();
Параметр.Наименование	= "Заявка";
Параметр.Значение		= ЭтотОбъект.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("Заявка").Значение;

Параметр	= Элемент.ПараметрыЗапроса.Добавить();
Параметр.Наименование	= "Мастер";
Параметр.Значение		= ЭтотОбъект.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("Мастер").Значение;

СтрокаИБ	= СтрокаСоединенияИнформационнойБазы();
СтрокаИБ	= СтрЗаменить(СтрокаИБ,"""","");
СтрокаИБ	= СтрЗаменить(СтрокаИБ,"=","");
СтрокаИБ	= СтрЗаменить(СтрокаИБ,";","");
СтрокаИБ	= СтрЗаменить(СтрокаИБ,"/","");
СтрокаИБ	= СтрЗаменить(СтрокаИБ,"\","");

Элемент.КоличествоПолей	= 6;

Модель	= Элемент.Модели.Добавить();
Модель.Наименование			= "diagostics_duration_company_tn12r_"+СтрокаИБ;
Модель.КоличествоПолей		= 5;
Модель.НомерПоляРезультата	= 9;

Модель	= Элемент.Модели.Добавить();
Модель.Наименование			= "diagostics_duration_master_tn12rm_"+СтрокаИБ;
Модель.КоличествоПолей		= 6;
Модель.НомерПоляРезультата	= 10;

Элемент.Записать();

Действие.Конец	= ТекущаяУниверсальнаяДатаВМиллисекундах();
Действие.Длительность	= Действие.Конец-Действие.Начало;
Действие.КоличествоДействий	= 1;
Лог.Записать();

А_Питон.Предсказание(Элемент.Код,Лог.Код);

//====
// Передача данных в отчет
//====
Лог	= Справочники.А_ЛогПроизводительности.НайтиПоКоду(Лог.Код).ПолучитьОбъект();
Действие	= Лог.Действия.Добавить();
Действие.Наименование	= "Клиент: Заполнение источника данных";
Действие.Начало	= ТекущаяУниверсальнаяДатаВМиллисекундах();

Запрос	= Новый Запрос;
Запрос.УстановитьПараметр("ИдентификаторЗапроса",Элемент.ИдентификаторЗапроса);
Запрос.Текст	= "
		|ВЫБРАТЬ
		|	A_SqlData.field_8,
		|	A_SqlData.field_9,
		|	A_SqlData.field_10,
		|	A_SqlData.field_11,
		|	A_SqlData.field_12,
		|	A_SqlData.field_13,
		|	A_SqlData.field_14,
		|	A_SqlData.field_15,
		|	A_SqlData.field_16,
		|	A_SqlData.field_17
		|ИЗ
		|	Справочник.A_SqlData.Данные КАК A_SqlData ГДЕ A_SqlData.Ссылка.ИдентификаторЗапроса=&ИдентификаторЗапроса";
ВнешниеНаборыДанных.Вставить("ТабЗначенийСКД",Запрос.Выполнить().Выгрузить());
Элемент.Ссылка.ПолучитьОбъект().Удалить();
Действие.Конец	= ТекущаяУниверсальнаяДатаВМиллисекундах();
Действие.Длительность	= Действие.Конец-Действие.Начало;
Действие.КоличествоДействий	= 1;
Лог.Записать();